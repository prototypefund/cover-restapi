openapi: 3.0.0
info:
  title: Cover-Rest Interface API
  description: This the Interface API for the Cover-Rest Project
  version: 1.0.8
servers:
- url: https://virtserver.swaggerhub.com/Cover-Rest/Interface-API/1.0.8
  description: SwaggerHub API Auto Mocking
- url: 0.0.0.0
  description: Interface API for Cover
tags:
- name: project
  description: routes for project
- name: commit
  description: routes for commit
- name: coverage
  description: routes concerning raw coverage data
- name: codeCognita
  description: routes concerning code-cognita data
- name: parser
  description: routes reserved for the parser
paths:
  /:
    get:
      summary: "default, for testing"
      description: route for testing
      operationId: root_get
      responses:
        "200":
          description: OK
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /read_project/{projectID}:
    get:
      tags:
      - project
      summary: searches for project
      description: |
        read all Projects in the Database or by passing project id or ids
        only those
      operationId: read_project
      parameters:
      - name: projectID
        in: path
        description: get projects in database or project by id/ids
        required: true
        style: simple
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: Project found in database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectType'
                x-content-type: application/json
        "400":
          description: bad input parameter
      x-openapi-router-controller: swagger_server.controllers.project_controller
  /write_project:
    post:
      tags:
      - project
      summary: adds an Project item
      description: Adds an Project to the Database
      operationId: write_project
      parameters:
      - name: overwrite
        in: query
        description: if Project Entry should be overwritten when it already exist
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: Project Object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectType'
      responses:
        "201":
          description: Project added
        "400":
          description: "invalid input, object invalid"
        "409":
          description: Project already exists
      x-openapi-router-controller: swagger_server.controllers.project_controller
  /{projectID}/read_commit:
    get:
      tags:
      - commit
      summary: searches for commit in project
      description: |
        read all commit in project or by passing commit id or ids
        only those
      operationId: read_commit
      parameters:
      - name: projectID
        in: path
        description: get commits in project or commits in project by id/ids
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: commitID
        in: query
        description: pass commit id to get it
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: Commit found in database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommitType'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.commit_controller
  /{projectID}/write_commit:
    post:
      tags:
      - commit
      summary: adds commit to database
      description: Adds Commit to the Database
      operationId: write_commit
      parameters:
      - name: projectID
        in: path
        description: pass project id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: overwrite
        in: query
        description: if Commit Entry should be overwritten when it already exist
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: Commit Object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitType'
      responses:
        "201":
          description: Commit added
        "400":
          description: "invalid input, object invalid"
        "409":
          description: Commit already exist
      x-openapi-router-controller: swagger_server.controllers.commit_controller
  /{projectID}/{commitID}/write_coverage:
    post:
      tags:
      - parser
      summary: For Parser to write to DB
      description: Route for Parser to write to DB
      operationId: write_coverage
      parameters:
      - name: projectID
        in: path
        description: pass project id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: commitID
        in: path
        description: pass commit id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Commit Object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParserFormat'
      responses:
        "201":
          description: Commit added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
        "400":
          description: "invalid input, object invalid"
        "409":
          description: Commit already exist
      x-openapi-router-controller: swagger_server.controllers.parser_controller
  /{projectID}/{commitID}/read_coverage/{coverageID}:
    get:
      tags:
      - parser
      summary: returns coverage for the Parser
      description: reads Coverage for the Parser
      operationId: read_coverage
      parameters:
      - name: projectID
        in: path
        description: pass project id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: commitID
        in: path
        description: pass commit id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: coverageID
        in: path
        description: pass coverage id to get it
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Coverage for Parser
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParserFormat'
      x-openapi-router-controller: swagger_server.controllers.parser_controller
  /{projectID}/{commitID}/{coverageID}/read_lines:
    get:
      tags:
      - coverage
      summary: returns lines from coverage
      description: read lines from coverage
      operationId: read_coverage_lines
      parameters:
      - name: projectID
        in: path
        description: pass project id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: commitID
        in: path
        description: pass commit id to get it
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: coverageID
        in: path
        description: pass coverage id to get it
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Lines from Coverage
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineType'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.coverage_controller
components:
  schemas:
    ProjectType:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
          format: url
          example: github.com/user/project
        name:
          type: string
          example: Project Name
      example:
        name: Project Name
        id: github.com/user/project
    CommitType:
      required:
      - branch
      - id
      - message
      type: object
      properties:
        id:
          type: string
          example: githash
        message:
          type: string
          example: Commit message
        branch:
          type: string
          example: testing
      example:
        id: githash
        message: Commit message
        branch: testing
    SourcesType:
      required:
      - path
      type: object
      properties:
        path:
          type: string
      example:
        path: path
    PackageType:
      required:
      - classes
      - path
      type: object
      properties:
        path:
          type: string
        line-rate:
          type: integer
        branch-rate:
          type: integer
        complexity:
          type: integer
        classes:
          type: array
          items:
            $ref: '#/components/schemas/ClassType'
      example:
        path: path
        complexity: 2
        classes:
        - path: path
          complexity: 4
          methods:
          - {}
          - {}
          name: name
          line-rate: 7
          branch-rate: 1
          lines:
          - hits: 1
            path: path
            number: 1
          - hits: 1
            path: path
            number: 1
        - path: path
          complexity: 4
          methods:
          - {}
          - {}
          name: name
          line-rate: 7
          branch-rate: 1
          lines:
          - hits: 1
            path: path
            number: 1
          - hits: 1
            path: path
            number: 1
        line-rate: 9
        branch-rate: 3
    ClassType:
      required:
      - lines
      - methods
      - name
      - path
      type: object
      properties:
        path:
          type: string
        name:
          type: string
        complexity:
          type: integer
        line-rate:
          type: integer
        branch-rate:
          type: integer
        methods:
          type: array
          items:
            type: object
        lines:
          type: array
          items:
            $ref: '#/components/schemas/LineType'
      example:
        path: path
        complexity: 4
        methods:
        - {}
        - {}
        name: name
        line-rate: 7
        branch-rate: 1
        lines:
        - hits: 1
          path: path
          number: 1
        - hits: 1
          path: path
          number: 1
    LineType:
      required:
      - hits
      type: object
      properties:
        path:
          type: string
        number:
          type: integer
        hits:
          type: integer
      example:
        hits: 1
        path: path
        number: 1
    ParserFormat:
      required:
      - packages
      - sources
      - version
      type: object
      properties:
        version:
          type: string
        timestamp:
          type: string
        lines-valid:
          type: integer
        lines-covered:
          type: integer
        line-rate:
          type: integer
        branches-covered:
          type: integer
        branches-valid:
          type: integer
        branch-rate:
          type: integer
        complexity:
          type: integer
        sources:
          type: array
          items:
            $ref: '#/components/schemas/SourcesType'
        packages:
          type: array
          items:
            $ref: '#/components/schemas/PackageType'
      example:
        complexity: 7
        lines-valid: 0
        branches-covered: 5
        sources:
        - path: path
        - path: path
        line-rate: 1
        branch-rate: 2
        packages:
        - path: path
          complexity: 2
          classes:
          - path: path
            complexity: 4
            methods:
            - {}
            - {}
            name: name
            line-rate: 7
            branch-rate: 1
            lines:
            - hits: 1
              path: path
              number: 1
            - hits: 1
              path: path
              number: 1
          - path: path
            complexity: 4
            methods:
            - {}
            - {}
            name: name
            line-rate: 7
            branch-rate: 1
            lines:
            - hits: 1
              path: path
              number: 1
            - hits: 1
              path: path
              number: 1
          line-rate: 9
          branch-rate: 3
        - path: path
          complexity: 2
          classes:
          - path: path
            complexity: 4
            methods:
            - {}
            - {}
            name: name
            line-rate: 7
            branch-rate: 1
            lines:
            - hits: 1
              path: path
              number: 1
            - hits: 1
              path: path
              number: 1
          - path: path
            complexity: 4
            methods:
            - {}
            - {}
            name: name
            line-rate: 7
            branch-rate: 1
            lines:
            - hits: 1
              path: path
              number: 1
            - hits: 1
              path: path
              number: 1
          line-rate: 9
          branch-rate: 3
        version: version
        branches-valid: 5
        lines-covered: 6
        timestamp: timestamp
    inline_response_201:
      type: object
      properties:
        id:
          type: string
          description: returns the coverageID
      example:
        id: id

